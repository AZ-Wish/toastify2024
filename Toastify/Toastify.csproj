<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="MSBuild.Sdk.Extras/1.6.55" ToolsVersion="15.0">
  <!-- Project Info -->
  <PropertyGroup>
    <Configurations>Windows (Debug);Windows (Test Release);Windows (Release)</Configurations>
    <Platforms>AnyCPU;x64</Platforms>
    <Configuration Condition="'$(Configuration)' == ''">Windows (Debug)</Configuration>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net472</TargetFramework>
    <LangVersion>default</LangVersion>
    <RootNamespace>Toastify</RootNamespace>
    <StartupObject>Toastify.EntryPoint</StartupObject>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <ApplicationIcon>Resources\ToastifyIcon.ico</ApplicationIcon>
    <ExtrasEnableWpfProjectSetup>true</ExtrasEnableWpfProjectSetup>
  </PropertyGroup>

  <!-- Assembly Info -->
  <PropertyGroup>
    <TimeOfDayTotalSeconds>$([MSBuild]::Divide($([System.DateTime]::get_Now().get_TimeOfDay().get_TotalSeconds()), 2).ToString('F0'))</TimeOfDayTotalSeconds>
    <Revision>$(TimeOfDayTotalSeconds)</Revision>
    <Revision Condition="'$(Configuration)' != 'Windows (Release)'">0</Revision>
    <Version>1.10.13</Version>
    <AssemblyVersion>$(Version)</AssemblyVersion>
    <FileVersion>$(Version).$(Revision)</FileVersion>
    <AssemblyName>Toastify</AssemblyName>
    <Description>Toast for Spotify</Description>
    <Authors>Alessandro Attard Barbini, Oren Nachman, Jesper Palm</Authors>
    <Copyright>Â© 2009-2018 $(Authors)</Copyright>
  </PropertyGroup>

  <!-- Other Properties -->
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <TransformOnBuild>true</TransformOnBuild>
    <OverwriteReadOnlyOutputFiles>true</OverwriteReadOnlyOutputFiles>
    <TransformOutOfDateOnly>false</TransformOutOfDateOnly>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <TrimUnusedDependencies>true</TrimUnusedDependencies>
    <RootPackageReference>false</RootPackageReference>
  </PropertyGroup>

  <!-- Target Imports -->
  <Import Project="$(VSToolsPath)\TextTemplating\Microsoft.TextTemplating.targets" />

  <!-- Project References -->
  <ItemGroup>
    <ProjectReference Include="..\Aleab.Common\Aleab.Common.Net.WebSockets\Aleab.Common.Net.WebSockets.csproj" />
    <ProjectReference Include="..\Aleab.Common\Aleab.Common\Aleab.Common.csproj" />
    <ProjectReference Include="..\ToastifyAPI\ToastifyAPI.csproj" />
  </ItemGroup>

  <!-- Package References -->
  <ItemGroup>
    <PackageReference Include="Castle.Windsor" Version="4.1.0" />
    <PackageReference Include="Extended.Wpf.Toolkit" Version="3.3.0" />
    <PackageReference Include="GoogleMeasurementProtocol" Version="1.4.2" />
    <PackageReference Include="JetBrains.Annotations" Version="11.1.0" />
    <PackageReference Include="log4net" Version="2.0.8" />
    <PackageReference Include="Microsoft.Packaging.Tools.Trimming" Version="1.1.0-preview1-26619-01" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="PowerArgs" Version="2.8.1" />
    <PackageReference Include="SpotifyAPI-NET" Version="2.18.0" />
  </ItemGroup>

  <!-- Regular References -->
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Security" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml" />
    <Reference Include="UIAutomationClient" />
    <Reference Include="UIAutomationTypes" />
    <Reference Include="WindowsBase" />
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="ManagedWinapi">
      <HintPath>.\ManagedWinapi.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <!-- Resources -->
    <EmbeddedResource Update="Properties\Resources.resx" Generator="ResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />
    <Compile Update="Properties\Resources.Designer.cs" DesignTime="True" AutoGen="True" DependentUpon="Resources.resx" />

    <EmbeddedResource Include="log4net.config" />
    <Resource Include="Resources\**\*.png" />
    <Resource Include="Resources\**\*.ico" />

    <!-- Settings -->
    <None Update="Properties\Settings.settings" Generator="SettingsSingleFileGenerator" LastGenOutput="Settings.Designer.cs" />
    <Compile Update="Properties\Settings.Designer.cs" DesignTime="True" AutoGen="True" DependentUpon="Settings.settings" />

    <!-- WPF items -->
    <Compile Update="**\*.xaml.cs" SubType="Designer" DependentUpon="%(Filename)" />

    <!-- TextTemplate items -->
    <None Include="src\Services\Analytics.g.tt" Generator="TextTemplatingFileGenerator" LastGenOutput="Analytics.g.cs" />

    <!-- Non-compilable Items -->
    <None Include="..\LICENSE" Link="LICENSES\LICENSE" CopyToOutputDirectory="Always" />
    <None Include="..\LICENSE-3RD-PARTY" Link="LICENSES\LICENSE-3RD-PARTY" CopyToOutputDirectory="Always" />

    <None Update="app.config" />
    <None Update="app.manifest" />
    <None Update="ga-code" />
    <None Update="version" />

    <None Update="ManagedWinapi.dll" Link="Resources\ManagedWinapi.dll" />
    <None Update="Resources\ManagedWinapiNativeHelper.dll" CopyToOutputDirectory="Always" />
  </ItemGroup>

  <!-- Debug-only Items -->
  <ItemGroup Condition="'$(Configuration)' != 'Windows (Debug)'">
    <Page Remove="src\View\DebugView.xaml" />
    <Compile Remove="src\View\DebugView.xaml.cs" />
  </ItemGroup>

  <!-- Services -->
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <!-- Build Configurations -->
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Windows (Debug)|AnyCPU'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <OutputPath>bin\AnyCPU\Debug\Windows\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Windows (Release)|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Optimize>true</Optimize>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <OutputPath>bin\AnyCPU\Release\Windows\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Windows (Test Release)|AnyCPU'">
    <DefineConstants>TRACE;TEST_RELEASE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <OutputPath>bin\AnyCPU\Test Release\Windows\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Windows (Debug)|x64'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\x64\Debug\Windows\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Windows (Release)|x64'">
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <OutputPath>bin\x64\Release\Windows\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Windows (Test Release)|x64'">
    <DefineConstants>TRACE;TEST_RELEASE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <OutputPath>bin\x64\Test Release\Windows\</OutputPath>
  </PropertyGroup>

  <!-- Build Events and MSBuild Targets -->
  <PropertyGroup>
    <PreBuildEvent />
    <PostBuildEvent />
  </PropertyGroup>
  
  <!-- Events' Properties and Items -->
  <PropertyGroup Condition="'$(Configuration)' == 'Windows (Release)'">
    <ToastifyAPIWinDir>$(SolutionDir)ToastifyAPI\bin\$(Platform)\Release\Windows</ToastifyAPIWinDir>
    <ToastifyAPIWin10Dir>$(SolutionDir)ToastifyAPI\bin\$(Platform)\Release\Windows 10</ToastifyAPIWin10Dir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Windows (Test Release)'">
    <ToastifyAPIWinDir>$(SolutionDir)ToastifyAPI\bin\$(Platform)\Test Release\Windows</ToastifyAPIWinDir>
    <ToastifyAPIWin10Dir>$(SolutionDir)ToastifyAPI\bin\$(Platform)\Test Release\Windows 10</ToastifyAPIWin10Dir>
  </PropertyGroup>
  <ItemGroup Condition="'$(Configuration)' == 'Windows (Release)' OR '$(Configuration)' == 'Windows (Test Release)'">
    <ToastifyApiWin32Files Include="$(ToastifyAPIWinDir)\ToastifyAPI.dll;$(ToastifyAPIWinDir)\ToastifyAPI.pdb" />
    <ToastifyApiUWPFiles Include="$(ToastifyAPIWin10Dir)\ToastifyAPI.dll;$(ToastifyAPIWin10Dir)\ToastifyAPI.pdb" />
  </ItemGroup>

  <!-- [PRE-BUILD] -->
  <Target Name="PreBuild" AfterTargets="PreBuildEvent">
    <Message Importance="High" Text="[PRE-BUILD]" />
    
    <!-- Execute pre-build.cmd script -->
    <Message Importance="High" Text="[PRE-BUILD] Execute pre-build.cmd script" />
    <Exec Command="&quot;$(ProjectDir)pre-build.cmd&quot; &quot;$(ProjectFileName)&quot; &quot;$(ProjectDir)&quot; &quot;$(DevEnvDir)&quot;" />

    <!-- Transform TextTemplate files -->
    <Message Importance="High" Text="[PRE-BUILD] Transform TextTemplate files" />
    <MSBuild Projects="$(ProjectFileName)" Targets="TransformAll" />
  </Target>

  <!-- [POST-BUILD] -->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Message Importance="High" Text="[POST-BUILD]" />

    <!-- Properties and Items -->
    <ItemGroup>
      <DirectoriesToRemove Include="$(TargetDir)de;$(TargetDir)es;$(TargetDir)fr;$(TargetDir)hu;$(TargetDir)it" />
      <DirectoriesToRemove Include="$(TargetDir)pt-BR;$(TargetDir)ro;$(TargetDir)ru;$(TargetDir)sv;$(TargetDir)zh-Hans" />
      <LibFilesToRemove Include="$(TargetDir)Xceed.Wpf.*.dll" Exclude="$(TargetDir)Xceed.Wpf.Toolkit.dll" />

      <LibFiles Include="$(TargetDir)*.dll;$(TargetDir)*.pdb" Exclude="@(LibFilesToRemove);$(TargetDir)Toastify*" />
    </ItemGroup>
    
    <!-- Remove Xceed.Wpf.Toolkit's unused files -->
    <Message Importance="High" Text="[POST-BUILD] Remove Xceed.Wpf.Toolkit's unused files" />
    <RemoveDir Directories="@(DirectoriesToRemove)" />
    <Delete Files="@(LibFilesToRemove)" />

    <!-- Copy ToastifyAPI files to output directory -->
    <Message Importance="High" Text="[POST-BUILD] Copy ToastifyAPI files to output directory" />
    <Copy SourceFiles="@(ToastifyApiWin32Files)" DestinationFiles="$(TargetDir)%(Filename)_Win32%(Extension)" />
    <Copy SourceFiles="@(ToastifyApiUWPFiles)" DestinationFiles="$(TargetDir)%(Filename)_UWP%(Extension)" />

    <!-- Move dependencies to /lib directory -->
    <Message Importance="High" Text="[POST-BUILD] Move dependencies to /lib directory" />
    <Move SourceFiles="@(LibFiles)" DestinationFolder="$(TargetDir)lib" />

    <!-- Execute post-build.cmd script -->
    <Message Importance="High" Text="[POST-BUILD] Execute post-build.cmd script" />
    <Exec Command="&quot;$(ProjectDir)post-build.cmd&quot; &quot;$(ConfigurationName)&quot; &quot;$(DevEnvDir)&quot; &quot;$(SolutionDir)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetFileName)&quot;" />
  </Target>
  
  <!-- [POST-CLEAN] -->
  <Target Name="PostClean" AfterTargets="Clean">
    <Message Importance="High" Text="[POST-CLEAN]" />
    <ItemGroup>
      <NsisFiles Include="$(TargetDir)*.nsi;$(TargetDir)*.nsh" />
      <ToastifyInstaller Include="$(TargetDir)ToastifyInstaller.exe" />
    </ItemGroup>
    <RemoveDir Directories="$(TargetDir)lib;$(TargetDir)LICENSES;$(TargetDir)Resources" />
    <Delete Files="@(ToastifyApiWin32Files->'$(TargetDir)%(Filename)_Win32%(Extension)')" />
    <Delete Files="@(ToastifyApiUWPFiles->'$(TargetDir)%(Filename)_UWP%(Extension)')" />
    <Delete Files="@(NsisFiles);@(ToastifyInstaller)" />
    <Delete Files="$(TargetDir)log.log" />
  </Target>
</Project>
